// key1 d8bc0e2295004f1bb285836391d040ed

// key2 2070569ecc6da474f91a7d652db4e8989


// location east us

// endpoint --  https://testproject.cognitiveservices.azure.com/face/v1.0/detect

// to do 

// compare two faces and show the confidence level


// requrl
// header
// faceapi key
// endpoint



// we use faceId's 

// this requires faceId's of two images which is the result of face-detect
// this faceId's expires in 24 hrs
//make sure the photos we are using have only one face

// so first pic two images from device 
// get there faceid's using face-detect api https://testproject.cognitiveservices.azure.com/face/v1.0/detect
    

// then send this two faceid's to endpoint/verify to get the confidence level  https://testproject.cognitiveservices.azure.com/face/v1.0/verify

// returns the verification result
// {
// isIdentical : true/false
// confidence level : number
// }


// or we can use persisted face to store all the faces and persons
// When DetectedFace objects are added to a group, such as 
// FaceList or Person, they become PersistedFace objects. 
// They can be retrieved at any time and don't expire.

//==>The Verify operation takes a face ID from DetectedFace or PersistedFace and 
// either another face ID or a Person object and determines whether they belong to the same person.
//  If you pass in a Person object, you can optionally pass in a PersonGroup to which that Person belongs
//   to improve performance i.e, instead of another faceId , PersonId can be used.


// use "recognitionModel" :"recognition_02" for accuracy

// for Verify send faceids which are generated by same recognition model

// import React ,{useRef} from 'react';
// import { Text, View, Image, Button } from 'react-native';
// import * as ImagePicker from 'expo-image-picker';
// import * as FaceDetector from 'expo-face-detector';
// import Constants from 'expo-constants';


// export default function Imageupload(){

//     const [image, setImage] = React.useState(null);
//     const [facesCount, setFaces] = React.useState(null);
  
//     React.useEffect(() => {
//       (async () => {
//         if (Constants.platform.ios) {
//           const { status } = await ImagePicker.requestCameraRollPermissionsAsync();
//           if (status !== 'granted') {
//             alert('Sorry, we need camera roll permissions to make this work!');
//           }
//         }
//       })();
//     }, []);
  
//     const pickImage = async () => {
//       let result = await ImagePicker.launchImageLibraryAsync({
//         mediaTypes: ImagePicker.MediaTypeOptions.All,
//         allowsEditing: false,
//         aspect: [4, 3],
//         quality: 1,
//       });
  
//       console.log(result);
  
//       if (!result.cancelled) {
//         setImage(result.uri);
//          detectFaces(result.uri).then(response => setFaces(response.faces.length));
//       }
//     };

//     let detectFaces = async imageUri => {
//         const options = { mode: FaceDetector.Constants.Mode.fast };
//         return await FaceDetector.detectFacesAsync(imageUri, options);
//     }

//     return (
//         <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>
//       <Button title="Pick an image from camera roll" onPress={pickImage} />
//       {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}

//       {facesCount && <Text>facesCount: {facesCount}</Text>}
//     </View>
//     )
// }



// import React from 'react';
 
// import {
//   AppRegistry,
//   Component,
//   StyleSheet,
//   Text,
//   View
// } from 'react-native';
 
// import Detector from './components/Detector';
 
// const image_picker_options = {
//   title: 'Select Photo', 
//   takePhotoButtonTitle: 'Take Photo...', 
//   chooseFromLibraryButtonTitle: 'Choose from Library...',
//   cameraType: 'back', 
//   mediaType: 'photo',
//   maxWidth: 480,
//   quality: 1, 
//   noData: false, 
//   path: 'images'
// };
 
// const api_key = 'YOUR FACE DETECTION API KEY';
 
// class FaceDetector extends Component {
//   render() {
//     return (
//       <View style={styles.container}>
//         <Detector imagePickerOptions={image_picker_options} apiKey={api_key} />
//       </View>
//     );
//   }
// }
 
// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     justifyContent: 'center',
//     alignItems: 'center',
//     backgroundColor: '#F5FCFF',
//   }
// });